/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package world;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author praty
 */
public class MapFrame extends javax.swing.JFrame {

    /**
     * Creates new form MapFrame
     */
    Customer customer;
    Driver driver;
    double fare;
    
    public MapFrame(Customer customer) {
        this.customer = customer;
        MysqlCon m = new MysqlCon();
        customer.balance = customer.getBalance();
        
        initComponents();
        pickuppin.setVisible(false);
        droppin.setVisible(false);
        cab.setVisible(false);
        findcab.setEnabled(false);
        hideDetails();
        welcome.setText("Welcome, " + customer.name +"!");
        this.setSize(1400,1000);
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(Color.BLACK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cab = new javax.swing.JLabel();
        droppin = new javax.swing.JLabel();
        pickuppin = new javax.swing.JLabel();
        pickup = new javax.swing.JTextField();
        drop = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        findcab = new javax.swing.JButton();
        estimatefare = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        addmoney = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        model = new javax.swing.JLabel();
        mobile = new javax.swing.JLabel();
        details = new javax.swing.JLabel();
        name2 = new javax.swing.JLabel();
        mobile2 = new javax.swing.JLabel();
        id2 = new javax.swing.JLabel();
        model2 = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        estimatetime = new javax.swing.JLabel();
        rating = new javax.swing.JLabel();
        rating2 = new javax.swing.JLabel();
        welcome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        cab.setBackground(new java.awt.Color(255, 0, 0));
        cab.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        cab.setForeground(new java.awt.Color(255, 153, 0));
        cab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cab.setText("üöï");
        cab.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(cab);
        cab.setBounds(70, 290, 70, 110);

        droppin.setBackground(new java.awt.Color(255, 0, 0));
        droppin.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        droppin.setForeground(new java.awt.Color(255, 0, 255));
        droppin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        droppin.setText("üìç");
        getContentPane().add(droppin);
        droppin.setBounds(150, 340, 50, 80);

        pickuppin.setBackground(new java.awt.Color(255, 0, 0));
        pickuppin.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        pickuppin.setForeground(new java.awt.Color(51, 51, 255));
        pickuppin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pickuppin.setText("üìç");
        getContentPane().add(pickuppin);
        pickuppin.setBounds(20, 340, 50, 80);

        pickup.setBackground(new java.awt.Color(0, 0, 0));
        pickup.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        pickup.setForeground(new java.awt.Color(212, 175, 55));
        pickup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickupActionPerformed(evt);
            }
        });
        pickup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pickupKeyReleased(evt);
            }
        });
        getContentPane().add(pickup);
        pickup.setBounds(670, 700, 137, 35);

        drop.setBackground(new java.awt.Color(0, 0, 0));
        drop.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        drop.setForeground(new java.awt.Color(212, 175, 55));
        drop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropActionPerformed(evt);
            }
        });
        drop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dropKeyReleased(evt);
            }
        });
        getContentPane().add(drop);
        drop.setBounds(670, 750, 137, 35);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/world/map2.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(220, 30, 800, 609);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(212, 175, 55));
        jLabel2.setText("Pickup Location");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(430, 700, 180, 29);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(212, 175, 55));
        jLabel3.setText("Destination");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(430, 750, 118, 29);

        findcab.setBackground(new java.awt.Color(0, 0, 0));
        findcab.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        findcab.setForeground(new java.awt.Color(212, 175, 55));
        findcab.setText("Find Cabs");
        findcab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findcabActionPerformed(evt);
            }
        });
        getContentPane().add(findcab);
        findcab.setBounds(510, 880, 200, 37);

        estimatefare.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        estimatefare.setForeground(new java.awt.Color(212, 175, 55));
        estimatefare.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(estimatefare);
        estimatefare.setBounds(310, 800, 580, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(212, 175, 55));
        jLabel7.setText("My Wallet");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(50, 60, 120, 29);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(212, 175, 55));
        jLabel8.setText("Current Balance");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 110, 180, 29);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(212, 175, 55));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 160, 130, 29);

        addmoney.setBackground(new java.awt.Color(0, 0, 0));
        addmoney.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        addmoney.setForeground(new java.awt.Color(212, 175, 55));
        addmoney.setText("Add Money");
        addmoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addmoneyActionPerformed(evt);
            }
        });
        getContentPane().add(addmoney);
        addmoney.setBounds(30, 220, 160, 37);

        name.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        name.setForeground(new java.awt.Color(212, 175, 55));
        name.setText("Name");
        getContentPane().add(name);
        name.setBounds(1090, 300, 270, 29);

        id.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        id.setForeground(new java.awt.Color(212, 175, 55));
        id.setText("Vehicle ID");
        getContentPane().add(id);
        id.setBounds(1090, 480, 270, 29);

        model.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        model.setForeground(new java.awt.Color(212, 175, 55));
        model.setText("Vehicle Model");
        getContentPane().add(model);
        model.setBounds(1090, 570, 270, 29);

        mobile.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mobile.setForeground(new java.awt.Color(212, 175, 55));
        mobile.setText("Mobile");
        getContentPane().add(mobile);
        mobile.setBounds(1090, 390, 270, 29);

        details.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        details.setForeground(new java.awt.Color(212, 175, 55));
        details.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        details.setText("Driver Details");
        getContentPane().add(details);
        details.setBounds(1080, 250, 270, 29);

        name2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        name2.setForeground(new java.awt.Color(212, 175, 55));
        name2.setText("Name2");
        getContentPane().add(name2);
        name2.setBounds(1090, 330, 270, 30);

        mobile2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mobile2.setForeground(new java.awt.Color(212, 175, 55));
        mobile2.setText("Mobile2");
        getContentPane().add(mobile2);
        mobile2.setBounds(1090, 420, 260, 29);

        id2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        id2.setForeground(new java.awt.Color(212, 175, 55));
        id2.setText("Vehicle ID2");
        getContentPane().add(id2);
        id2.setBounds(1090, 510, 230, 30);

        model2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        model2.setForeground(new java.awt.Color(212, 175, 55));
        model2.setText("Vehicle Model2");
        getContentPane().add(model2);
        model2.setBounds(1090, 600, 250, 30);

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/world/flashlogo.jpg"))); // NOI18N
        getContentPane().add(logo);
        logo.setBounds(1090, 60, 260, 150);

        estimatetime.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        estimatetime.setForeground(new java.awt.Color(212, 175, 55));
        estimatetime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(estimatetime);
        estimatetime.setBounds(320, 840, 580, 30);

        rating.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        rating.setForeground(new java.awt.Color(212, 175, 55));
        rating.setText("Rating");
        getContentPane().add(rating);
        rating.setBounds(1090, 650, 250, 40);

        rating2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        rating2.setForeground(new java.awt.Color(212, 175, 55));
        rating2.setText("Rating2");
        getContentPane().add(rating2);
        rating2.setBounds(1090, 680, 240, 40);

        welcome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        welcome.setForeground(new java.awt.Color(212, 175, 55));
        welcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcome.setText("Welcome");
        getContentPane().add(welcome);
        welcome.setBounds(380, 650, 480, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findcabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findcabActionPerformed
        if(customer.balance < 300 || fare > customer.balance)
        {
            new LowBalanceFrame().setVisible(true);
            return;
        }
        
        MysqlCon m = new MysqlCon();
        if(!driversAvailable())  
        {
            new NoDriversFrame().setVisible(true);
            return;
        }
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        int x1 = getLocX(pickup.getText());
        int y1 = getLocY(pickup.getText());
        int x2 = getLocX(drop.getText());
        int y2 = getLocY(drop.getText());
        String driver_un = searchCabs(x1,y1);
        driver = new Driver(driver_un);
        driver.fetchDriver();
        
        driver.setDrivingState(1);
        
        int x = driver.x;
        int y = driver.y;
        cab.setLocation(x, y);
        cab.setVisible(true);

        allowBooking(false);
        new CabBookingFrame(this, driver, x1, y1).setVisible(true);        
    }//GEN-LAST:event_findcabActionPerformed

    private void addmoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addmoneyActionPerformed
        new AddMoneyFrame(customer).setVisible(true);
        if(fare != 0)
            estimatefare.setText("Estimated Fare: Rs. " + fare);
        else
            estimatefare.setText("");
    }//GEN-LAST:event_addmoneyActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        MysqlCon m = new MysqlCon();
        customer.balance = customer.getBalance();
        jLabel9.setText(customer.balance + "");
    }//GEN-LAST:event_formWindowGainedFocus

    private void dropKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dropKeyReleased
        String t1 = pickup.getText();
        String t2 = drop.getText();
        if(!t1.equals("") && !t2.equals(""))
        {
            if((t1.charAt(0) >= 'A' && t1.charAt(0) <= 'T' || t1.charAt(0) >= 'a' && t1.charAt(0) <= 't')
                    && (t2.charAt(0) >= 'A' && t2.charAt(0) <= 'T' || t2.charAt(0) >= 'a' && t2.charAt(0) <= 't')
                    && (Character.toLowerCase(t1.charAt(0)) !=  Character.toLowerCase(t2.charAt(0)))){
                findcab.setEnabled(true);
                
                MysqlCon m = new MysqlCon();
                fare = calcFare(t1,t2);
                
                estimatefare.setVisible(true);
                estimatefare.setText("Estimated Fare: Rs. " + fare);
                
                estimatetime.setVisible(true);
                estimatetime.setText("Estimated Trip Duration: " + (int)fare/10 + " minutes");

                int x = 0;
                int y = 0;
                if(!pickuppin.getText().equals("")) 
                {

                    x = getLocX(pickup.getText());
                    y = getLocY(pickup.getText());

                    pickuppin.setLocation(x, y);
                    pickuppin.setVisible(true);

                    x = getLocX(drop.getText());
                    y = getLocY(drop.getText());

                    droppin.setLocation(x, y);
                    droppin.setVisible(true);
                }
            }
            else
            {
                estimatefare.setText("Invalid input. Please try again.");
                estimatetime.setVisible(false);
                findcab.setEnabled(false);
            }
        }
        else
        {
            findcab.setEnabled(false);
        }
    }//GEN-LAST:event_dropKeyReleased
    
    public int getLocX(String loc)
    {
        MysqlCon m = new MysqlCon();
        loc = String.valueOf(loc.charAt(0));
        int x = 0;
        try {
            Statement stmt = m.con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.locations where location = " + "'" + loc + "'");
            rs.next();
            x = Integer.parseInt(rs.getString(2));
            m.con.close();
        } catch (SQLException se) {}

        return x;
    }

    public int getLocY(String loc)
    {
        MysqlCon m = new MysqlCon();
        loc = String.valueOf(loc.charAt(0));
        int y = 0;
        try {
            Statement stmt = m.con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.locations where location = " + "'" + loc + "'");
            rs.next();
            y = Integer.parseInt(rs.getString(3));
            m.con.close();
        } catch (SQLException se) {}

        return y;
    }
    
    public double calcFare(String a, String b)
    {
        a = String.valueOf(a.charAt(0));
        b = String.valueOf(b.charAt(0));
        int x1 = getLocX(a);
        int y1 = getLocY(a);
        int x2 = getLocX(b);
        int y2 = getLocY(b);
        int distance = Math.abs(x2 - x1) + Math.abs(y2 - y1);
        double price = 0.5;
        return distance * price;
    }
    
    public boolean driversAvailable()
    {
        MysqlCon m = new MysqlCon();
        boolean t = true;
        try
        {
            Statement stmt = m.con.createStatement();  
            ResultSet rs = stmt.executeQuery("select count(*) from mydb.drivers where driving = 0"); 
            rs.next();
            t = rs.getInt(1) != 0;
            m.con.close();
        }
        catch(SQLException se){se.printStackTrace();}
        return t;
    }
    
    public String searchCabs(int x, int y)
    {
        MysqlCon m = new MysqlCon();
        String un = new String();
        try
        {
            Statement stmt = m.con.createStatement();  
            ResultSet rs = stmt.executeQuery("select * , (ABS(x-"+x+") + ABS(y-"+y+")) as distance from mydb.drivers where driving = 0 order by distance asc, rating desc"); 
            rs.next();
            un = rs.getString("username");
            m.con.close();
        }
        catch(SQLException se){}

        return un;
    }
    
    public void moveCar(String un, int x1, int y1, boolean f)
    {        
        int x = driver.getDriverX();
        int y = driver.getDriverY();
        cab.setLocation(x, y);
        cab.setVisible(true);
        Timer timer = new Timer(1, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                int x = driver.getDriverX();
                int y = driver.getDriverY();
        
                if(y != y1)
                {
                    y += 10 * Integer.signum(y1 - y);
                     cab.setLocation(x, y);
                }
                else if(x != x1)
                {
                    x += 10 * Integer.signum(x1 - x);
                    cab.setLocation(x, y);
                }
                driver.setDriverX(x);
                driver.setDriverY(y);
                if(x == x1 && y == y1 && !f)
                {
                    ((Timer)ae.getSource()).stop();
                    cabArrived();
                }
                if(x == x1 && y == y1 && f)
                {
                    ((Timer)ae.getSource()).stop();
                    completeTrip();
                }
            }
        });
        timer.setInitialDelay(1000);
        timer.start(); 
    }
    
    public void cabArrived()
    {
        int x2 = getLocX(drop.getText());
        int y2 = getLocY(drop.getText());
        new CabArrivedFrame(this, driver, x2, y2).setVisible(true);
    }
    
    public void completeTrip()
    {
        customer.makePayment(driver, fare);
        new TripCompletionFrame(this, driver).setVisible(true);
    }
    
    public void allowBooking(boolean b)
    {
        pickup.setEditable(b);
        drop.setEditable(b);
        findcab.setEnabled(b);
    }
    
    public void showDetails()
    {
        details.setVisible(true);
        
        name.setVisible(true);
        name2.setVisible(true);
        name2.setText(driver.name);
        
        mobile.setVisible(true);
        mobile2.setVisible(true);
        mobile2.setText(driver.mobile);
        
        id.setVisible(true);
        id2.setVisible(true);
        id2.setText(driver.vehicleId);
        
        model.setVisible(true);
        model2.setVisible(true);
        model2.setText(driver.vehicleModel);
        
        rating.setVisible(true);
        rating2.setVisible(true);
        DecimalFormat dc = new DecimalFormat("0.0");
        String formattedText = dc.format(driver.rating);
        rating2.setText(formattedText);
    }
    
    public void hideDetails()
    {
        details.setVisible(false);
        name.setVisible(false);
        name2.setVisible(false);
        mobile.setVisible(false);
        mobile2.setVisible(false);
        id.setVisible(false);
        id2.setVisible(false);
        model.setVisible(false);
        model2.setVisible(false);
        rating.setVisible(false);
        rating2.setVisible(false);
    }
    
    public void hideCab()
    {
        cab.setVisible(false);
    }
    
    private void pickupKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pickupKeyReleased
        dropKeyReleased(evt);
    }//GEN-LAST:event_pickupKeyReleased

    private void dropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropActionPerformed

    private void pickupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickupActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        customer.setOnline(0);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapFrame().setVisible(true);
            }
        });
        */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addmoney;
    private javax.swing.JLabel cab;
    private javax.swing.JLabel details;
    private javax.swing.JTextField drop;
    private javax.swing.JLabel droppin;
    private javax.swing.JLabel estimatefare;
    private javax.swing.JLabel estimatetime;
    private javax.swing.JButton findcab;
    private javax.swing.JLabel id;
    private javax.swing.JLabel id2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel mobile;
    private javax.swing.JLabel mobile2;
    private javax.swing.JLabel model;
    private javax.swing.JLabel model2;
    private javax.swing.JLabel name;
    private javax.swing.JLabel name2;
    private javax.swing.JTextField pickup;
    private javax.swing.JLabel pickuppin;
    private javax.swing.JLabel rating;
    private javax.swing.JLabel rating2;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
